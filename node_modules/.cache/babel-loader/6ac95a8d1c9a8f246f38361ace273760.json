{"ast":null,"code":"var _jsxFileName = \"/Users/edwardmiller/Documents/GitHub/Weekly/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../../App.css\";\nimport \"./App.scss\";\nimport { Sidebar } from \"../Sidebar/Sidebar\";\nimport { Header } from \"../Header/Header\";\nimport { Calendar } from \"../Calendar/Calendar\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useTasks } from \"../../Hooks/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) setTasks(JSON.parse(storedTasks));\n  }, []);\n  useEffect(() => {\n    persistTasksToStorage(tasks);\n  }, [tasks]); //Functions\n\n  const addNewTask = newTaskInput => {\n    setTasks(tasks.concat({\n      id: uuidv4(),\n      tag: \"QUEUE\",\n      text: newTaskInput,\n      color: randomColor()\n    }));\n  };\n\n  const changeTaskTag = (id, newTag) => {\n    const task = tasks.find(task => task.id === id);\n    task.tag = newTag;\n    setTasks(tasks.filter(task => task.id !== id).concat(task));\n  };\n\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const removeAllTasks = () => {\n    setTasks([]);\n  };\n\n  const persistTasksToStorage = tasks => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App text-gray-600 overflow-hidden min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          tasks: tasks,\n          changeTaskTag: changeTaskTag,\n          removeTask: removeTask,\n          setTasks: setTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"calendar-header\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            addNewTask: addNewTask,\n            removeAllTasks: removeAllTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            tasks: tasks,\n            removeTask: removeTask,\n            changeTaskTag: changeTaskTag,\n            setTasks: setTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"weOf0VesAdD4xw+rXOOhYK4d8/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/Weekly/src/components/App/App.js"],"names":["Sidebar","Header","Calendar","DndProvider","HTML5Backend","useTasks","App","tasks","setTasks","useState","useEffect","storedTasks","localStorage","getItem","JSON","parse","persistTasksToStorage","addNewTask","newTaskInput","concat","id","uuidv4","tag","text","color","randomColor","changeTaskTag","newTag","task","find","filter","removeTask","removeAllTasks","setItem","stringify"],"mappings":"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","sourcesContent":["import \"../../App.css\";\nimport \"./App.scss\";\nimport { Sidebar } from \"../Sidebar/Sidebar\";\nimport { Header } from \"../Header/Header\";\nimport { Calendar } from \"../Calendar/Calendar\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useTasks } from \"../../Hooks/hooks\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) setTasks(JSON.parse(storedTasks));\n  }, []);\n\n  useEffect(() => {\n    persistTasksToStorage(tasks);\n  }, [tasks]);\n\n  //Functions\n\n  const addNewTask = (newTaskInput) => {\n    setTasks(\n      tasks.concat({\n        id: uuidv4(),\n        tag: \"QUEUE\",\n        text: newTaskInput,\n        color: randomColor(),\n      })\n    );\n  };\n\n  const changeTaskTag = (id, newTag) => {\n    const task = tasks.find((task) => task.id === id);\n    task.tag = newTag;\n    setTasks(tasks.filter((task) => task.id !== id).concat(task));\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const removeAllTasks = () => {\n    setTasks([]);\n  };\n\n  const persistTasksToStorage = (tasks) => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"App text-gray-600 overflow-hidden min-h-screen\">\n        <div className=\"container\">\n          <Sidebar\n            tasks={tasks}\n            changeTaskTag={changeTaskTag}\n            removeTask={removeTask}\n            setTasks={setTasks}\n          />\n          <main className=\"calendar-header\">\n            <Header addNewTask={addNewTask} removeAllTasks={removeAllTasks} />\n            <Calendar\n              tasks={tasks}\n              removeTask={removeTask}\n              changeTaskTag={changeTaskTag}\n              setTasks={setTasks}\n            />\n          </main>\n        </div>\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}