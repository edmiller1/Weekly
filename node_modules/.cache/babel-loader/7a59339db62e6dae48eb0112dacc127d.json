{"ast":null,"code":"var _jsxFileName = \"/Users/edwardmiller/Documents/GitHub/Weekly/src/components/Day/Day.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Day.scss\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../../util/types\";\nimport { Task } from \"../Task/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Day = ({\n  name,\n  dayIndex,\n  tasks,\n  setTasks\n}) => {\n  _s();\n\n  const changeTicketTag = (id, newTag) => {\n    const task = tasks.find(task => task.id === id);\n    task.tag = newTag;\n    setTasks(task.filter(task => task.id !== id).concat(task));\n  };\n\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.Task,\n    drop: task => changeTicketTag(task.id, name),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n\n  const isActiveDay = () => {\n    return new Date().getDay() === dayIndex;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: isActiveDay() ? \"active-day\" : \"day-color\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isOver ? \"day-background selected\" : \"day-background\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Day, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n\n_c = Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/Weekly/src/components/Day/Day.js"],"names":["React","useDrop","ItemTypes","Task","Day","name","dayIndex","tasks","setTasks","changeTicketTag","id","newTag","task","find","tag","filter","concat","isOver","drop","accept","collect","monitor","isActiveDay","Date","getDay","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,OAAO,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AAAA;;AAC1D,QAAMC,eAAe,GAAG,CAACC,EAAD,EAAKC,MAAL,KAAgB;AACtC,UAAMC,IAAI,GAAGL,KAAK,CAACM,IAAN,CAAYD,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAjC,CAAb;AACAE,IAAAA,IAAI,CAACE,GAAL,GAAWH,MAAX;AACAH,IAAAA,QAAQ,CAACI,IAAI,CAACG,MAAL,CAAaH,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAlC,EAAsCM,MAAtC,CAA6CJ,IAA7C,CAAD,CAAR;AACD,GAJD;;AAMA,QAAM,CAAC;AAAEK,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBjB,OAAO,CAAC;AACjCkB,IAAAA,MAAM,EAAEjB,SAAS,CAACC,IADe;AAEjCe,IAAAA,IAAI,EAAGN,IAAD,IAAUH,eAAe,CAACG,IAAI,CAACF,EAAN,EAAUL,IAAV,CAFE;AAGjCe,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBJ,MAAAA,MAAM,EAAE,CAAC,CAACI,OAAO,CAACJ,MAAR;AADW,KAAd;AAHwB,GAAD,CAAlC;;AAQA,QAAMK,WAAW,GAAG,MAAM;AACxB,WAAO,IAAIC,IAAJ,GAAWC,MAAX,OAAwBlB,QAA/B;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEgB,WAAW,KAAK,YAAL,GAAoB,WAA9C;AAAA,gBAA4DjB;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEY,MAAM,GAAG,yBAAH,GAA+B,gBAArD;AAAA,gBACGV,KAAK,CAACkB,GAAN,CAAWb,IAAD,iBACT,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,KAAK,EAAEL,KAAzB;AAAgC,QAAA,QAAQ,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BM;;GAAMJ,G;UAOgBH,O;;;KAPhBG,G","sourcesContent":["import React from \"react\";\nimport \"./Day.scss\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../../util/types\";\nimport { Task } from \"../Task/Task\";\n\nexport const Day = ({ name, dayIndex, tasks, setTasks }) => {\n  const changeTicketTag = (id, newTag) => {\n    const task = tasks.find((task) => task.id === id);\n    task.tag = newTag;\n    setTasks(task.filter((task) => task.id !== id).concat(task));\n  };\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.Task,\n    drop: (task) => changeTicketTag(task.id, name),\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  const isActiveDay = () => {\n    return new Date().getDay() === dayIndex;\n  };\n\n  return (\n    <div>\n      <h1 className={isActiveDay() ? \"active-day\" : \"day-color\"}>{name}</h1>\n      <div className={isOver ? \"day-background selected\" : \"day-background\"}>\n        {tasks.map((task) => (\n          <Task task={task} tasks={tasks} setTasks={setTasks} />\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}