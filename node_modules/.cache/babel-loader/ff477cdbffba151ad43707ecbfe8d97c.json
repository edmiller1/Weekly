{"ast":null,"code":"var _jsxFileName = \"/Users/edwardmiller/Documents/GitHub/Weekly/src/components/Day/Day.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Day.scss\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../../util/types\";\nimport { Task } from \"../Task/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Day = props => {\n  _s();\n\n  const {\n    name,\n    dayIndex,\n    tasks,\n    removeTask,\n    changeTaskTag,\n    setTasks\n  } = props;\n  const [isOver, drop] = useDrop({\n    accept: ItemTypes.TASK,\n    drop: item => changeTaskTag(item.id, name),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n\n  const isActiveDay = () => {\n    return new Date().getDay() === dayIndex;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: isActiveDay() ? \"active-day\" : \"day-color\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isOver ? \"day-background selected\" : \"day-background\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        removeTask: removeTask,\n        tasks: tasks,\n        setTasks: setTasks\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Day, \"3xZT6x4eKRUtKSos+MSRM1EcEcE=\", false, function () {\n  return [useDrop];\n});\n\n_c = Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/Weekly/src/components/Day/Day.js"],"names":["React","useDrop","ItemTypes","Task","Day","props","name","dayIndex","tasks","removeTask","changeTaskTag","setTasks","isOver","drop","accept","TASK","item","id","collect","monitor","isActiveDay","Date","getDay","map","task"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,OAAO,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,UAAzB;AAAqCC,IAAAA,aAArC;AAAoDC,IAAAA;AAApD,MAAiEN,KAAvE;AAEA,QAAM,CAACO,MAAD,EAASC,IAAT,IAAiBZ,OAAO,CAAC;AAC7Ba,IAAAA,MAAM,EAAEZ,SAAS,CAACa,IADW;AAE7BF,IAAAA,IAAI,EAAGG,IAAD,IAAUN,aAAa,CAACM,IAAI,CAACC,EAAN,EAAUX,IAAV,CAFA;AAG7BY,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBP,MAAAA,MAAM,EAAE,CAAC,CAACO,OAAO,CAACP,MAAR;AADW,KAAd;AAHoB,GAAD,CAA9B;;AAQA,QAAMQ,WAAW,GAAG,MAAM;AACxB,WAAO,IAAIC,IAAJ,GAAWC,MAAX,OAAwBf,QAA/B;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,GAAG,EAAEM,IAAV;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEO,WAAW,KAAK,YAAL,GAAoB,WAA9C;AAAA,gBAA4Dd;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEM,MAAM,GAAG,yBAAH,GAA+B,gBAArD;AAAA,gBACGJ,KAAK,CAACe,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,UAAU,EAAEf,UAFd;AAIE,QAAA,KAAK,EAAED,KAJT;AAKE,QAAA,QAAQ,EAAEG;AALZ,SAGOa,IAAI,CAACP,EAHZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/BM;;GAAMb,G;UAGYH,O;;;KAHZG,G","sourcesContent":["import React from \"react\";\nimport \"./Day.scss\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../../util/types\";\nimport { Task } from \"../Task/Task\";\n\nexport const Day = (props) => {\n  const { name, dayIndex, tasks, removeTask, changeTaskTag, setTasks } = props;\n\n  const [isOver, drop] = useDrop({\n    accept: ItemTypes.TASK,\n    drop: (item) => changeTaskTag(item.id, name),\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  const isActiveDay = () => {\n    return new Date().getDay() === dayIndex;\n  };\n\n  return (\n    <div ref={drop}>\n      <h1 className={isActiveDay() ? \"active-day\" : \"day-color\"}>{name}</h1>\n      <div className={isOver ? \"day-background selected\" : \"day-background\"}>\n        {tasks.map((task) => (\n          <Task\n            task={task}\n            removeTask={removeTask}\n            key={task.id}\n            tasks={tasks}\n            setTasks={setTasks}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}