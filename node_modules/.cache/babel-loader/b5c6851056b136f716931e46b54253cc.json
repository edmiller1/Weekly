{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { randomColor } from \"../util/randomColor\";\n\nfunction useTasks() {\n  _s();\n\n  //State\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) setTasks(JSON.parse(storedTasks));\n  }, []); //Functions\n\n  const addNewTask = newTaskInput => {\n    setTasks(tasks.concat({\n      id: uuidv4(),\n      tag: \"QUEUE\",\n      text: newTaskInput,\n      color: randomColor()\n    }));\n  };\n\n  const changeTaskTag = (id, newTag) => {\n    const task = tasks.find(task => task.id === id);\n    task.tag = newTag;\n    setTasks(tasks.filter(task => task.id !== id).concat(task));\n  };\n\n  const removeTask = id => {\n    console.log(tasks);\n    setTasks(tasks.filter(task => task.id !== id));\n    console.log(tasks);\n  };\n\n  const removeAllTasks = () => {\n    setTasks([]);\n  };\n\n  const persistTasksToStorage = tasks => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  return {\n    tasks,\n    changeTaskTag,\n    removeTask,\n    removeAllTasks,\n    addNewTask,\n    setTasks\n  };\n}\n\n_s(useTasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\nexport { useTasks };","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/Weekly/src/Hooks/useTasks.js"],"names":["useState","useEffect","v4","uuidv4","randomColor","useTasks","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","addNewTask","newTaskInput","concat","id","tag","text","color","changeTaskTag","newTag","task","find","filter","removeTask","console","log","removeAllTasks","persistTasksToStorage","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAIF,WAAJ,EAAiBD,QAAQ,CAACI,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAD,CAAR;AAClB,GAHQ,EAGN,EAHM,CAAT,CAJkB,CASlB;;AAEA,QAAMK,UAAU,GAAIC,YAAD,IAAkB;AACnCP,IAAAA,QAAQ,CACND,KAAK,CAACS,MAAN,CAAa;AACXC,MAAAA,EAAE,EAAEb,MAAM,EADC;AAEXc,MAAAA,GAAG,EAAE,OAFM;AAGXC,MAAAA,IAAI,EAAEJ,YAHK;AAIXK,MAAAA,KAAK,EAAEf,WAAW;AAJP,KAAb,CADM,CAAR;AAQD,GATD;;AAWA,QAAMgB,aAAa,GAAG,CAACJ,EAAD,EAAKK,MAAL,KAAgB;AACpC,UAAMC,IAAI,GAAGhB,KAAK,CAACiB,IAAN,CAAYD,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAjC,CAAb;AACAM,IAAAA,IAAI,CAACL,GAAL,GAAWI,MAAX;AACAd,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,EAAuCD,MAAvC,CAA8CO,IAA9C,CAAD,CAAR;AACD,GAJD;;AAMA,QAAMG,UAAU,GAAIT,EAAD,IAAQ;AACzBU,IAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;AACAC,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;AACD,GAJD;;AAMA,QAAMsB,cAAc,GAAG,MAAM;AAC3BrB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMsB,qBAAqB,GAAIvB,KAAD,IAAW;AACvCG,IAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA8BnB,IAAI,CAACoB,SAAL,CAAezB,KAAf,CAA9B;AACD,GAFD;;AAIA,SAAO;AACLA,IAAAA,KADK;AAELc,IAAAA,aAFK;AAGLK,IAAAA,UAHK;AAILG,IAAAA,cAJK;AAKLf,IAAAA,UALK;AAMLN,IAAAA;AANK,GAAP;AAQD;;GAlDQF,Q;;AAoDT,SAASA,QAAT","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { randomColor } from \"../util/randomColor\";\n\nfunction useTasks() {\n  //State\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) setTasks(JSON.parse(storedTasks));\n  }, []);\n\n  //Functions\n\n  const addNewTask = (newTaskInput) => {\n    setTasks(\n      tasks.concat({\n        id: uuidv4(),\n        tag: \"QUEUE\",\n        text: newTaskInput,\n        color: randomColor(),\n      })\n    );\n  };\n\n  const changeTaskTag = (id, newTag) => {\n    const task = tasks.find((task) => task.id === id);\n    task.tag = newTag;\n    setTasks(tasks.filter((task) => task.id !== id).concat(task));\n  };\n\n  const removeTask = (id) => {\n    console.log(tasks);\n    setTasks(tasks.filter((task) => task.id !== id));\n    console.log(tasks);\n  };\n\n  const removeAllTasks = () => {\n    setTasks([]);\n  };\n\n  const persistTasksToStorage = (tasks) => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  return {\n    tasks,\n    changeTaskTag,\n    removeTask,\n    removeAllTasks,\n    addNewTask,\n    setTasks,\n  };\n}\n\nexport { useTasks };\n"]},"metadata":{},"sourceType":"module"}