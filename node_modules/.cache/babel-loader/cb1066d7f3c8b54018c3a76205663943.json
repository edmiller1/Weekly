{"ast":null,"code":"var _jsxFileName = \"/Users/edwardmiller/Documents/GitHub/Weekly/src/components/Task/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Task.scss\";\nimport { ItemTypes } from \"../../util/types\";\nimport { useDrag } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Task = props => {\n  _s();\n\n  const {\n    id,\n    tag,\n    theme\n  } = props.task;\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [text, setText] = useState(props.task.description);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ItemTypes.TASK,\n    item: {\n      id: id,\n      text: props.task.text,\n      tag: tag\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    }),\n    canDrag: () => !isEditMode\n  });\n\n  const deleteTask = () => {\n    props.removeTask(id);\n  };\n\n  const ticketStyle = {\n    backgroundColor: `var(--color-${theme}-background)`,\n    color: `var(--color-${theme}-text)`\n  };\n  const deleteButtonStyle = {\n    color: `var(--color-${theme}-text)`\n  };\n  const inputStyle = {\n    color: `var(--color-${theme}-text)`,\n    border: `2px solid var(--color-${theme}-text)`\n  };\n\n  function updateDescription() {\n    setIsEditMode(false);\n    props.updateDescription(id, text);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: props.task.color\n    },\n    className: \"task \" + (isDragging ? \" selected\" : \"\"),\n    ref: drag,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-bold text-gray-600 cursor-default\",\n      children: props.task.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"focus:outline-none\",\n      onClick: () => props.removeTask(id),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times delete-button cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"KEtggw5d9k+ucQNAmgQB0LZNjBo=\", false, function () {\n  return [useDrag];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/Weekly/src/components/Task/Task.js"],"names":["React","useState","ItemTypes","useDrag","Task","props","id","tag","theme","task","isEditMode","setIsEditMode","text","setText","description","isDragging","drag","type","TASK","item","collect","monitor","canDrag","deleteTask","removeTask","ticketStyle","backgroundColor","color","deleteButtonStyle","inputStyle","border","updateDescription"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,GAAN;AAAWC,IAAAA;AAAX,MAAqBH,KAAK,CAACI,IAAjC;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACI,KAAK,CAACI,IAAN,CAAWK,WAAZ,CAAhC;AAEA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBb,OAAO,CAAC;AACrCc,IAAAA,IAAI,EAAEf,SAAS,CAACgB,IADqB;AAErCC,IAAAA,IAAI,EAAE;AACJb,MAAAA,EAAE,EAAEA,EADA;AAEJM,MAAAA,IAAI,EAAEP,KAAK,CAACI,IAAN,CAAWG,IAFb;AAGJL,MAAAA,GAAG,EAAEA;AAHD,KAF+B;AAOrCa,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBN,MAAAA,UAAU,EAAE,CAAC,CAACM,OAAO,CAACN,UAAR;AADO,KAAd,CAP4B;AAUrCO,IAAAA,OAAO,EAAE,MAAM,CAACZ;AAVqB,GAAD,CAAtC;;AAaA,QAAMa,UAAU,GAAG,MAAM;AACvBlB,IAAAA,KAAK,CAACmB,UAAN,CAAiBlB,EAAjB;AACD,GAFD;;AAIA,QAAMmB,WAAW,GAAG;AAClBC,IAAAA,eAAe,EAAG,eAAclB,KAAM,cADpB;AAElBmB,IAAAA,KAAK,EAAG,eAAcnB,KAAM;AAFV,GAApB;AAKA,QAAMoB,iBAAiB,GAAG;AACxBD,IAAAA,KAAK,EAAG,eAAcnB,KAAM;AADJ,GAA1B;AAIA,QAAMqB,UAAU,GAAG;AACjBF,IAAAA,KAAK,EAAG,eAAcnB,KAAM,QADX;AAEjBsB,IAAAA,MAAM,EAAG,yBAAwBtB,KAAM;AAFtB,GAAnB;;AAKA,WAASuB,iBAAT,GAA6B;AAC3BpB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAN,IAAAA,KAAK,CAAC0B,iBAAN,CAAwBzB,EAAxB,EAA4BM,IAA5B;AACD;;AAED,sBACE;AACE,IAAA,KAAK,EAAE;AAAEc,MAAAA,eAAe,EAAErB,KAAK,CAACI,IAAN,CAAWkB;AAA9B,KADT;AAEE,IAAA,SAAS,EAAE,WAAWZ,UAAU,GAAG,WAAH,GAAiB,EAAtC,CAFb;AAGE,IAAA,GAAG,EAAEC,IAHP;AAAA,4BAKE;AAAM,MAAA,SAAS,EAAC,wCAAhB;AAAA,gBACGX,KAAK,CAACI,IAAN,CAAWG;AADd;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,OAAO,EAAE,MAAMP,KAAK,CAACmB,UAAN,CAAiBlB,EAAjB,CAFjB;AAAA,6BAIE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3DM;;GAAMF,I;UAMoBD,O;;;KANpBC,I","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Task.scss\";\nimport { ItemTypes } from \"../../util/types\";\nimport { useDrag } from \"react-dnd\";\n\nexport const Task = (props) => {\n  const { id, tag, theme } = props.task;\n\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [text, setText] = useState(props.task.description);\n\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.TASK,\n    item: {\n      id: id,\n      text: props.task.text,\n      tag: tag,\n    },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n    canDrag: () => !isEditMode,\n  });\n\n  const deleteTask = () => {\n    props.removeTask(id);\n  };\n\n  const ticketStyle = {\n    backgroundColor: `var(--color-${theme}-background)`,\n    color: `var(--color-${theme}-text)`,\n  };\n\n  const deleteButtonStyle = {\n    color: `var(--color-${theme}-text)`,\n  };\n\n  const inputStyle = {\n    color: `var(--color-${theme}-text)`,\n    border: `2px solid var(--color-${theme}-text)`,\n  };\n\n  function updateDescription() {\n    setIsEditMode(false);\n    props.updateDescription(id, text);\n  }\n\n  return (\n    <div\n      style={{ backgroundColor: props.task.color }}\n      className={\"task \" + (isDragging ? \" selected\" : \"\")}\n      ref={drag}\n    >\n      <span className=\"font-bold text-gray-600 cursor-default\">\n        {props.task.text}\n      </span>\n      <button\n        className=\"focus:outline-none\"\n        onClick={() => props.removeTask(id)}\n      >\n        <i className=\"fas fa-times delete-button cursor-pointer\"></i>\n      </button>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}